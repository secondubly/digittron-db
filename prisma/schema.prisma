generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @unique
  username     String    @unique
  key          Key[]
  auth_session Session[]

  @@map("user_")
}

model Session {
  id             String @id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  user           User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("session")
}

model Key {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  user            User    @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@map("key")
}

model CommandPermission {
  name     String          @id @db.VarChar(255)
  level    PermissionLevel @default(VIEWER)
  commands commands?

  @@map("command_permissions")
}

model commands {
  name                String            @id @db.VarChar(255)
  aliases             Json?             @default("[]") @db.Json
  response            String
  enabled             Boolean           @default(true)
  visible             Boolean           @default(true)
  id                  Int               @default(autoincrement())
  type                CommandType       @default(CUSTOM)
  cooldown            Int?              @default(5)
  command_permissions CommandPermission @relation(fields: [name], references: [name], onDelete: Cascade)

  @@map("commands")
}

model settings {
  id            Int    @id @default(autoincrement())
  name          String @db.VarChar(255)
  oauth         String @db.VarChar(255)
  refresh_token String @db.VarChar(255)
  value         Json?  @default("null") @db.Json

  @@unique([id, name])
  @@map("settings")
}

enum PermissionLevel {
  VIEWER
  FOLLOWER
  REGULAR
  VIP
  SUBSCRIBER
  MODERATOR
  EDITOR
  BROADCASTER
}

enum CommandType {
  DEFAULT
  CUSTOM
}
